/**
 * This class is generated by jOOQ
 */
package com.pupd.backend.data.generated.tables.records;


import com.pupd.backend.data.generated.tables.CycleWorkouts;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CycleWorkoutsRecord extends UpdatableRecordImpl<CycleWorkoutsRecord> implements Record4<UUID, UUID, UUID, Integer> {

    private static final long serialVersionUID = 1031829467;

    /**
     * Setter for <code>public.cycle_workouts.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cycle_workouts.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.cycle_workouts.cycle_id</code>.
     */
    public void setCycleId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.cycle_workouts.cycle_id</code>.
     */
    public UUID getCycleId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.cycle_workouts.workout_id</code>.
     */
    public void setWorkoutId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.cycle_workouts.workout_id</code>.
     */
    public UUID getWorkoutId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.cycle_workouts.pos</code>.
     */
    public void setPos(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.cycle_workouts.pos</code>.
     */
    public Integer getPos() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, UUID, UUID, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<UUID, UUID, UUID, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return CycleWorkouts.CYCLE_WORKOUTS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field2() {
        return CycleWorkouts.CYCLE_WORKOUTS.CYCLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field3() {
        return CycleWorkouts.CYCLE_WORKOUTS.WORKOUT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return CycleWorkouts.CYCLE_WORKOUTS.POS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value2() {
        return getCycleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value3() {
        return getWorkoutId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getPos();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CycleWorkoutsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CycleWorkoutsRecord value2(UUID value) {
        setCycleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CycleWorkoutsRecord value3(UUID value) {
        setWorkoutId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CycleWorkoutsRecord value4(Integer value) {
        setPos(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CycleWorkoutsRecord values(UUID value1, UUID value2, UUID value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CycleWorkoutsRecord
     */
    public CycleWorkoutsRecord() {
        super(CycleWorkouts.CYCLE_WORKOUTS);
    }

    /**
     * Create a detached, initialised CycleWorkoutsRecord
     */
    public CycleWorkoutsRecord(UUID id, UUID cycleId, UUID workoutId, Integer pos) {
        super(CycleWorkouts.CYCLE_WORKOUTS);

        set(0, id);
        set(1, cycleId);
        set(2, workoutId);
        set(3, pos);
    }
}
