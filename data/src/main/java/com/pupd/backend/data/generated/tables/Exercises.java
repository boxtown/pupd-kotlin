/**
 * This class is generated by jOOQ
 */
package com.pupd.backend.data.generated.tables;


import com.pupd.backend.data.generated.Keys;
import com.pupd.backend.data.generated.Public;
import com.pupd.backend.data.generated.tables.records.ExercisesRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Exercises extends TableImpl<ExercisesRecord> {

    private static final long serialVersionUID = 1142251259;

    /**
     * The reference instance of <code>public.exercises</code>
     */
    public static final Exercises EXERCISES = new Exercises();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExercisesRecord> getRecordType() {
        return ExercisesRecord.class;
    }

    /**
     * The column <code>public.exercises.id</code>.
     */
    public final TableField<ExercisesRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.exercises.name</code>.
     */
    public final TableField<ExercisesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.exercises</code> table reference
     */
    public Exercises() {
        this("exercises", null);
    }

    /**
     * Create an aliased <code>public.exercises</code> table reference
     */
    public Exercises(String alias) {
        this(alias, EXERCISES);
    }

    private Exercises(String alias, Table<ExercisesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Exercises(String alias, Table<ExercisesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ExercisesRecord> getPrimaryKey() {
        return Keys.EXERCISES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ExercisesRecord>> getKeys() {
        return Arrays.<UniqueKey<ExercisesRecord>>asList(Keys.EXERCISES_PKEY, Keys.EXERCISES_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Exercises as(String alias) {
        return new Exercises(alias, this);
    }

    /**
     * Rename this table
     */
    public Exercises rename(String name) {
        return new Exercises(name, null);
    }
}
