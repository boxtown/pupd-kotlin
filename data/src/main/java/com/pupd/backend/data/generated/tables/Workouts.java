/**
 * This class is generated by jOOQ
 */
package com.pupd.backend.data.generated.tables;


import com.pupd.backend.data.generated.Keys;
import com.pupd.backend.data.generated.Public;
import com.pupd.backend.data.generated.tables.records.WorkoutsRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Workouts extends TableImpl<WorkoutsRecord> {

    private static final long serialVersionUID = 470926857;

    /**
     * The reference instance of <code>public.workouts</code>
     */
    public static final Workouts WORKOUTS = new Workouts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkoutsRecord> getRecordType() {
        return WorkoutsRecord.class;
    }

    /**
     * The column <code>public.workouts.id</code>.
     */
    public final TableField<WorkoutsRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("gen_random_uuid()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.workouts.name</code>.
     */
    public final TableField<WorkoutsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.workouts</code> table reference
     */
    public Workouts() {
        this("workouts", null);
    }

    /**
     * Create an aliased <code>public.workouts</code> table reference
     */
    public Workouts(String alias) {
        this(alias, WORKOUTS);
    }

    private Workouts(String alias, Table<WorkoutsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Workouts(String alias, Table<WorkoutsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WorkoutsRecord> getPrimaryKey() {
        return Keys.WORKOUTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WorkoutsRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkoutsRecord>>asList(Keys.WORKOUTS_PKEY, Keys.WORKOUTS_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Workouts as(String alias) {
        return new Workouts(alias, this);
    }

    /**
     * Rename this table
     */
    public Workouts rename(String name) {
        return new Workouts(name, null);
    }
}
