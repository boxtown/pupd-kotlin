/**
 * This class is generated by jOOQ
 */
package com.pupd.backend.data.generated.tables;


import com.pupd.backend.data.generated.Keys;
import com.pupd.backend.data.generated.Public;
import com.pupd.backend.data.generated.tables.records.CycleWorkoutsRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CycleWorkouts extends TableImpl<CycleWorkoutsRecord> {

    private static final long serialVersionUID = -1485363917;

    /**
     * The reference instance of <code>public.cycle_workouts</code>
     */
    public static final CycleWorkouts CYCLE_WORKOUTS = new CycleWorkouts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CycleWorkoutsRecord> getRecordType() {
        return CycleWorkoutsRecord.class;
    }

    /**
     * The column <code>public.cycle_workouts.id</code>.
     */
    public final TableField<CycleWorkoutsRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaultValue(org.jooq.impl.DSL.field("gen_random_uuid()", org.jooq.impl.SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.cycle_workouts.cycle_id</code>.
     */
    public final TableField<CycleWorkoutsRecord, UUID> CYCLE_ID = createField("cycle_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.cycle_workouts.workout_id</code>.
     */
    public final TableField<CycleWorkoutsRecord, UUID> WORKOUT_ID = createField("workout_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.cycle_workouts.pos</code>.
     */
    public final TableField<CycleWorkoutsRecord, Integer> POS = createField("pos", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.cycle_workouts</code> table reference
     */
    public CycleWorkouts() {
        this("cycle_workouts", null);
    }

    /**
     * Create an aliased <code>public.cycle_workouts</code> table reference
     */
    public CycleWorkouts(String alias) {
        this(alias, CYCLE_WORKOUTS);
    }

    private CycleWorkouts(String alias, Table<CycleWorkoutsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CycleWorkouts(String alias, Table<CycleWorkoutsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CycleWorkoutsRecord> getPrimaryKey() {
        return Keys.CYCLE_WORKOUTS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CycleWorkoutsRecord>> getKeys() {
        return Arrays.<UniqueKey<CycleWorkoutsRecord>>asList(Keys.CYCLE_WORKOUTS_PKEY, Keys.CYCLE_WORKOUTS_CYCLE_ID_WORKOUT_ID_POS_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CycleWorkouts as(String alias) {
        return new CycleWorkouts(alias, this);
    }

    /**
     * Rename this table
     */
    public CycleWorkouts rename(String name) {
        return new CycleWorkouts(name, null);
    }
}
